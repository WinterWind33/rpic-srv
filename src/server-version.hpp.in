// Copyright (c) 2023 Andrea Ballestrazzi
#pragma once

// C++ STL
#include <string_view>

#include <neargye/semver.hpp>

namespace rpic_server::version {

namespace details {

/**
 * @brief Get the Server prerelease value or none if the prerelease is not
 *      specified.
 *
 * @return The Server prerelease value.
 */
[[nodiscard]] constexpr semver::prerelease getServerPrerelease() noexcept {
    constexpr std::string_view prelease{"${RPIC_SERVER_VERSION_PRERELEASE}"};

    if constexpr (prelease == "alpha") {
        return semver::prerelease::alpha;
    } else if constexpr (prelease == "beta") {
        return semver::prerelease::beta;
    } else if constexpr (prelease == "rc") {
        return semver::prerelease::rc;
    } else {
        return semver::prerelease::none;
    }
}
} // namespace details

/**
 * @brief Retrieves the server version.
 *
 * @return The server version.
 */
[[nodiscard]] constexpr auto getServerVersion() noexcept {
    return semver::version{${RPIC_SERVER_VERSION_MAJOR}, ${RPIC_SERVER_VERSION_MINOR},
                           ${RPIC_SERVER_VERSION_PATCH}, details::getServerPrerelease()};
}

} // namespace rpic_server::version
